"use strict";
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var findHandler_1 = __importDefault(require("./findHandler"));
var createValues_1 = __importDefault(require("./createValues"));
var untransformData_1 = __importDefault(require("./untransformData"));
var compositeParams_1 = __importDefault(require("./compositeParams"));
var createRelativePath_1 = __importDefault(require("./createRelativePath"));
exports.default = (function (config, handlersSet) {
    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
    var _a = __read(config.url.split('?'), 2), dirPath = _a[0], query = _a[1];
    var relativePath = createRelativePath_1.default(dirPath, config.baseURL);
    var handler = findHandler_1.default(config.method, relativePath, handlersSet);
    return (handler &&
        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
        handler[2]({
            config: config,
            values: createValues_1.default(handler[1], relativePath),
            params: compositeParams_1.default(query, config.params),
            data: untransformData_1.default(config.data, config.headers)
        }));
});
//# sourceMappingURL=findAndCallHandler.js.map